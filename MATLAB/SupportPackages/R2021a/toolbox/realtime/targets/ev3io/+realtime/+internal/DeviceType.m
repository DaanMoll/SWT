classdef DeviceType
    % DeviceType - EV3 device type defination

    % Copyright 2014-2020 The MathWorks, Inc.
    
    properties (Constant)
        TYPE_NXT_TOUCH                = 1    % Device is NXT touch sensor
        TYPE_NXT_LIGHT                = 2    % Device is NXT light sensor
        TYPE_NXT_SOUND                = 3    % Device is NXT sound sensor
        TYPE_NXT_COLOR                = 4    % Device is NXT color sensor
        TYPE_NXT_ULTRASONIC           = 5    % Device is NXT ultrasonic sensor
        TYPE_NXT_TEMP                 = 6    % Device is NXT tempture sensor
        
        TYPE_TACHO                    = 7    % Device is a tacho motor
        TYPE_MINITACHO                = 8    % Device is a mini tacho motor
        TYPE_NEWTACHO                 = 9    % Device is a new tacho motor
        
        TYPE_EV3_TOUCH                = 16   % Device is EV3 touch sensor
        TYPE_EV3_COLOR                = 29   % Device is EV3 Color sensor
        TYPE_EV3_ULTRASONIC           = 30   % Device is EV3 UltraSonic sensor
        TYPE_EV3_GYRO                 = 32   % Device is EV3 Gyro sensor
        TYPE_EV3_IR                   = 33   % Device is EV3 IR sensor
        
        TYPE_THIRD_PARTY_START        = 50
        TYPE_THIRD_PARTY_END          = 99
        
        TYPE_IIC_UNKNOWN              = 100
        
        TYPE_NXT_TEST                 = 101  % Device is a NXT ADC test sensor
        
        TYPE_NXT_IIC                  = 123  % Device is NXT IIC sensor
        TYPE_TERMINAL                 = 124  % Port is connected to a terminal
        TYPE_UNKNOWN                  = 125  % Port not empty but type has not been determined
        TYPE_NONE                     = 126  % Port empty or not available
        TYPE_ERROR                    = 127  % Port not empty and type is invalid
    end
    
    methods (Static)
        function info = getInfo(types)
            info = {};
            for i = 1:length(types)
                if (types(i) >= 50) && (types(i) <= 99)
                    info{end + 1} = 'THIRD_PARTY';
                else
                    info{end + 1} = realtime.internal.DeviceType.map(types(i));
                end
            end
        end
    end
    
    properties (Constant)
        typeSet = [ realtime.internal.DeviceType.TYPE_NXT_TOUCH                ...
                    realtime.internal.DeviceType.TYPE_NXT_LIGHT                ...
                    realtime.internal.DeviceType.TYPE_NXT_SOUND                ...
                    realtime.internal.DeviceType.TYPE_NXT_COLOR                ...
                    realtime.internal.DeviceType.TYPE_NXT_ULTRASONIC           ...
                    realtime.internal.DeviceType.TYPE_NXT_TEMP                 ...
                    realtime.internal.DeviceType.TYPE_TACHO                    ...
                    realtime.internal.DeviceType.TYPE_MINITACHO                ...
                    realtime.internal.DeviceType.TYPE_NEWTACHO                 ...
                    realtime.internal.DeviceType.TYPE_EV3_TOUCH                ...
                    realtime.internal.DeviceType.TYPE_EV3_COLOR                ...
                    realtime.internal.DeviceType.TYPE_EV3_ULTRASONIC           ...
                    realtime.internal.DeviceType.TYPE_EV3_GYRO                 ...
                    realtime.internal.DeviceType.TYPE_EV3_IR                   ...
                    realtime.internal.DeviceType.TYPE_THIRD_PARTY_START        ...
                    realtime.internal.DeviceType.TYPE_THIRD_PARTY_END          ...
                    realtime.internal.DeviceType.TYPE_IIC_UNKNOWN              ...
                    realtime.internal.DeviceType.TYPE_NXT_TEST                 ...
                    realtime.internal.DeviceType.TYPE_NXT_IIC                  ...
                    realtime.internal.DeviceType.TYPE_TERMINAL                 ...
                    realtime.internal.DeviceType.TYPE_UNKNOWN                  ...
                    realtime.internal.DeviceType.TYPE_NONE                     ...
                    realtime.internal.DeviceType.TYPE_ERROR                    ...
                   ];
        nameSet = { 'NXT_TOUCH'                ...
                    'NXT_LIGHT'                ...
                    'NXT_SOUND'                ...
                    'NXT_COLOR'                ...
                    'NXT_ULTRASONIC'           ...
                    'NXT_TEMP'                 ...
                    'TACHO'                    ...
                    'MINITACHO'                ...
                    'NEWTACHO'                 ...
                    'touch'                    ...
                    'color'                    ...
                    'sonic'                    ...
                    'gyro'                     ...
                    'infrared'                 ...
                    'THIRD_PARTY_START'        ...
                    'THIRD_PARTY_END'          ...
                    'IIC_UNKNOWN'              ...
                    'NXT_TEST'                 ...
                    'NXT_IIC'                  ...
                    'TERMINAL'                 ...
                    'UNKNOWN'                  ...
                    ''                     ...
                    'ERROR'                    ...
                   };
        map = containers.Map(realtime.internal.DeviceType.typeSet, realtime.internal.DeviceType.nameSet)
    end
end
